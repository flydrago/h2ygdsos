<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.h2y.os.dao.write.ICommentPraiseDaoW">

	<resultMap type="com.h2y.os.entity.CommentPraise" id="commentpraiseDaoMap">
		<result property="id" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="dataId" column="data_id" javaType="string" jdbcType="VARCHAR" />
		<result property="account" column="account" javaType="string" jdbcType="VARCHAR" />
		<result property="nickName" column="nick_name" javaType="string" jdbcType="VARCHAR" />
		<result property="praiseType" column="praise_type" javaType="int" jdbcType="INTEGER" />
		<result property="status" column="status" javaType="int" jdbcType="INTEGER" />
		<result property="createDate" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="updateDate" column="update_date" javaType="date" jdbcType="TIMESTAMP" />
	</resultMap>
	<insert id="add" parameterType="com.h2y.os.entity.CommentPraise">
		<selectKey keyProperty="id" resultType="long" order="AFTER"> 
			SELECT max(id)  AS value  from tb_comment_praise 
		</selectKey>  
		insert into tb_comment_praise
		(
		data_id,
		account,
		nick_name,
		praise_type,
		status,
		create_date,
		update_date
		)
		values (
		#{dataId,jdbcType=VARCHAR},
		#{account,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{praiseType,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{createDate,jdbcType=TIMESTAMP},
		#{updateDate,jdbcType=TIMESTAMP}
		)
	</insert>

	<update id="update" parameterType="com.h2y.os.entity.CommentPraise">
		update tb_comment_praise
		set
		data_id = #{dataId,jdbcType=VARCHAR},
		account = #{account,jdbcType=VARCHAR},
		nick_name = #{nickName,jdbcType=VARCHAR},
		praise_type = #{praiseType,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_date = #{updateDate,jdbcType=TIMESTAMP}
		where id = #{id}
	</update>

	<delete id="delete" parameterType="com.h2y.os.entity.CommentPraise">
		delete from
		tb_comment_praise
		where
		id = #{id} 
	</delete>

	<delete id="deleteById" parameterType="long">
		delete from
		tb_comment_praise
		where
		id = #{id} 
	</delete>
	
	<delete id="deleteByCommentIDAndAccount" parameterType="hashmap">
		delete from
		tb_comment_praise
		where
		data_id = #{dataId}
		and account = #{account}
	</delete>
	
</mapper>