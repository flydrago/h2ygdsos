<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans    
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx       
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    
    
	<context:component-scan base-package="com.h2y.*">
	       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    <!-- 注解扫描 -->
    <!--<context:component-scan base-package="com.h2y"/>-->
    <!--
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName"> <value>java:comp/env/jdbc/payDB</value> </property>
    </bean>
    -->

	<!-- 读数据源 -->
    <bean id="dataSourceR" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbcR.driverClass}" />
		<property name="jdbcUrl" value="${jdbcR.url}" />
		<property name="user" value="${jdbcR.username}" />
		<property name="password" value="${jdbcR.password}" />
		<property name="autoCommitOnClose" value="true"></property>
		<property name="minPoolSize" value="5"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="initialPoolSize" value="10"></property>
		<!-- 最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->   
		<property name="maxIdleTime" value="0"></property> 
		<property name="testConnectionOnCheckin" value="false"/>
		<property name="testConnectionOnCheckout" value="true"/>
		<property name="preferredTestQuery" value="SELECT 1"/>
		<property name="acquireIncrement" value="10"></property>
		<property name="acquireRetryAttempts" value="3"></property>
		<property name="checkoutTimeout" value="30000"></property>

    </bean>
    
    <!-- 写数据源 -->
    <bean id="dataSourceW" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbcW.driverClass}" />
		<property name="jdbcUrl" value="${jdbcW.url}" />
		<property name="user" value="${jdbcW.username}" />
		<property name="password" value="${jdbcW.password}" />
		<property name="autoCommitOnClose" value="true"></property>
		<property name="minPoolSize" value="5"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="initialPoolSize" value="10"></property>
		<!-- 最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->   
		<property name="maxIdleTime" value="0"></property> 
		<property name="testConnectionOnCheckin" value="false"/>
		<property name="testConnectionOnCheckout" value="true"/>
		<property name="preferredTestQuery" value="SELECT 1"/>
		<property name="acquireIncrement" value="10"></property>
		<property name="acquireRetryAttempts" value="3"></property>
		<property name="checkoutTimeout" value="30000"></property>

    </bean>
    

     <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactoryR" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceR"/>
        <property name="mapperLocations" value="classpath:mapperR/*.xml"/>
    </bean>
    
      <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactoryW" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceW"/>
        <property name="mapperLocations" value="classpath:mapperW/*.xml"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.h2y.os.dao.read"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryR"/>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.h2y.os.dao.write"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryW"/>
    </bean>

    <!-- 事务回滚 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceR"/>
    </bean>
    
    
    <!-- 定义调用对象和调用对象的方法 -->
	<bean id="jobtask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类 -->
		<property name="targetObject">
			<ref bean="jobService" />
		</property>
		<!-- 调用类中的方法 -->
		<property name="targetMethod">
			<value>updateGoodsPrice</value>
		</property>
		<!-- 调度同步 -->
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>

	<!-- 定义触发时间 -->
	<bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="jobtask" />
		</property>
		<!-- cron表达式 -->
		<property name="cronExpression">
			<!-- 秒 分 时 日 月 周 年 -->
			<value>0 */2 * * * ?</value>
		</property>
	</bean>

	<!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="doTime" />
			</list>
		</property>
		<property name="autoStartup" value="true" />
		<property name="schedulerName" value="cronScheduler" />
	</bean>

</beans>