<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.h2y.os.dao.read.IGoodsAnalysisDaoR">

	<resultMap type="com.h2y.os.entity.GoodsAnalysis" id="goodsanalysisDaoMap">
		<result property="id" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="memberId" column="member_id" javaType="long" jdbcType="VARCHAR" />
		<result property="zoneCode" column="zone_code" javaType="string" jdbcType="VARCHAR" />
		<result property="goodsPriceId" column="goods_price_id" javaType="long" jdbcType="BIGINT" />
		<result property="goodsTypeId" column="goods_type_id" javaType="long" jdbcType="BIGINT" />
		<result property="createDate" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="updateDate" column="update_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="memo" column="memo" javaType="string" jdbcType="VARCHAR" />
		<result property="ord" column="ord" javaType="long" jdbcType="BIGINT" />
		<result property="clickCount" column="click_count" javaType="long" jdbcType="BIGINT" />
		<result property="reverse1" column="reverse_1" javaType="string" jdbcType="VARCHAR" />
		<result property="reverse2" column="reverse_2" javaType="string" jdbcType="VARCHAR" />
		<result property="reverse3" column="reverse_3" javaType="string" jdbcType="VARCHAR" />
		<result property="reverse4" column="reverse_4" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="goodspriceDaoListMap">
		<result property="id" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="goodsId" column="goods_id" javaType="long" jdbcType="BIGINT" />
		<result property="goodsTypeId" column="goods_type_id" javaType="long" jdbcType="BIGINT" />
		<result property="gdsCode" column="gds_code" javaType="string" jdbcType="VARCHAR" />
		<result property="gdsCode2" column="gds_code2" javaType="string" jdbcType="VARCHAR" />
		<result property="goodsNumber" column="goods_number" javaType="long" jdbcType="BIGINT" />
		<result property="goodsName" column="goods_name" javaType="string" jdbcType="VARCHAR" />
		<result property="goodsNickName" column="goods_nick_name" javaType="string" jdbcType="VARCHAR" />
		<result property="inventory" column="inventory" javaType="int" jdbcType="INTEGER" />
		<result property="goodsUnit" column="goods_unit" javaType="int" jdbcType="INTEGER" />
		<result property="spec" column="spec" javaType="int" jdbcType="INTEGER" />
		<result property="spellName" column="spell_name" javaType="string" jdbcType="VARCHAR" />
		<result property="firSpellName" column="fir_spell_name" javaType="string" jdbcType="VARCHAR" />
		<result property="maxPrice" column="max_price" javaType="double" jdbcType="DOUBLE" />
		<result property="minPrice" column="min_price" javaType="double" jdbcType="DOUBLE" />
		<result property="memberPrice" column="member_price" javaType="double" jdbcType="DOUBLE" />
		<result property="marketPrice" column="market_price" javaType="double" jdbcType="DOUBLE" />
		<result property="sellPrice" column="sell_price" javaType="double" jdbcType="DOUBLE" />
		<result property="version" column="version" javaType="int" jdbcType="INTEGER" />
		<result property="status" column="status" javaType="int" jdbcType="INTEGER" />
		<result property="createDate" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="shelvesDate" column="shelves_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="clickRate" column="click_rate" javaType="int" jdbcType="INTEGER" />
		<result property="sellRate" column="sell_rate" javaType="int" jdbcType="INTEGER" />
		<result property="markIds" column="mark_ids" javaType="string" jdbcType="VARCHAR" />
		<result property="markInfoIds" column="mark_info_ids" javaType="string" jdbcType="VARCHAR" />
		<result property="ord" column="ord" javaType="long" jdbcType="BIGINT" />
		<result property="memo" column="memo" javaType="string" jdbcType="VARCHAR" />
		<result property="updateDate" column="update_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" />
		<result property="sellUnit" column="sell_unit" javaType="long" jdbcType="BIGINT" />
		<result property="isLimitSell" column="is_limit_sell" javaType="int" jdbcType="INTEGER" />
		<result property="isAllowGrade" column="is_allow_grade" javaType="int" jdbcType="INTEGER" />
		<result property="isGiftGrade" column="is_gift_grade" javaType="int" jdbcType="INTEGER" />
		<result property="limitSellNumber" column="limit_sell_number" javaType="long" jdbcType="BIGINT" />
		<result property="limitGradeNumber" column="limit_grade_number" javaType="double" jdbcType="DOUBLE" />
		<result property="limitGiftNumber" column="limit_gift_number" javaType="long" jdbcType="BIGINT" />
		<result property="isMallVisible" column="is_mall_visible" javaType="int" jdbcType="INTEGER" />
		<result property="gdsQr1" column="gds_qr_1" javaType="string" jdbcType="VARCHAR" />
		<result property="gdsQrInside" column="gds_qr_inside" javaType="string" jdbcType="VARCHAR" />
		<result property="sparePrice1" column="spare_price1" javaType="double" jdbcType="DOUBLE" />
		<result property="sparePrice2" column="spare_price2" javaType="double" jdbcType="DOUBLE" />
		<result property="markIds2" column="mark_ids2" javaType="long" jdbcType="BIGINT" />
		<result property="goodsSource" column="goods_source" javaType="int" jdbcType="INTEGER" />
		<result property="addedDate" column="added_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="goodsVersion" column="goods_version" javaType="int" jdbcType="INTEGER" />
		<result property="goodsStatus" column="goods_status" javaType="int" jdbcType="INTEGER" />
		<result property="zoneCode" column="zone_code" javaType="string" jdbcType="VARCHAR" />
		<result property="unitId" column="unit_id" javaType="long" jdbcType="BIGINT" />
		<result property="unitType" column="unit_type" javaType="int" jdbcType="INTEGER" />
		<result property="isActivity" column="is_activity" javaType="int" jdbcType="INTEGER" />
		<result property="activityPrice" column="activity_price" javaType="double" jdbcType="DOUBLE" />
		<result property="activityGoodsId" column="activity_goods_id" javaType="long" jdbcType="BIGINT" />
		<result property="activityType" column="activity_type" javaType="int" jdbcType="INTEGER" />
		<result property="isGift" column="is_gift" javaType="int" jdbcType="INTEGER" />
		<result property="isRelation" column="is_relation" javaType="int" jdbcType="INTEGER" />
		<result property="weight" column="weight" javaType="long" jdbcType="BIGINT" />
		<result property="isAd" column="is_ad" javaType="long" jdbcType="BIGINT" />
		<result property="allowGradePrice" column="allow_grade_price" javaType="double" jdbcType="DOUBLE" />
		<result property="goodsEditStatus" column="goods_edit_status" javaType="int" jdbcType="INTEGER" />
		<result property="fileDataId" column="file_data_id" javaType="long" jdbcType="BIGINT" />
		<result property="img" column="img" javaType="string" jdbcType="VARCHAR" />
		<result property="singlePrice" column="single_price" javaType="double" jdbcType="DOUBLE" />
	</resultMap>
	
	
	
	
	<!-- 商品列表列 -->
	<sql id="goodsPriceListColumn">
			s.id as aid,
			s.click_count,
			s.update_date,
			gp.id,
			gp.goods_id,
			gp.goods_number,
			gp.goods_name,
			gp.goods_nick_name,
			case when gp.is_activity = 1 THEN gp.activity_price ELSE gp.member_price END as member_price,
			gp.market_price,
			gp.sell_price,
			gp.version,
			gp.`status`,
			gp.is_activity,
			gp.create_date,
			gp.activity_price,
			gp.is_gift,
			gp.goods_edit_status,
			gp.ord,
			gp.sell_rate,			
			case when gp.is_activity = 1 THEN gp.activity_price ELSE gp.member_price END as single_price,
			<!-- CONCAT('?bn=fileDataService&amp;id=',CAST(fd.id AS CHAR)) as img-->
			CONCAT('?bn=goodsLogoService&amp;gpId=',CAST(gp.id AS CHAR),'&amp;gpV=',CAST(gp.version AS CHAR)) as img
	</sql>

	

	<select id="get" parameterType="long"
		resultMap="goodsanalysisDaoMap">
		select * from tb_goods_analysis where id = #{id}
	</select>

	
	<!-- 获取猜你喜欢列表 -->
	<select id="getGoodsAnalysisListByUser" parameterType="hashmap" resultMap="goodspriceDaoListMap">
		SELECT
				<include refid="goodsPriceListColumn"></include>
			FROM
				tb_goods_price gp

			JOIN tb_goods_analysis s ON s.member_id = #{memberId} 
			and gp.id = s.goods_price_id
			WHERE gp.status = 0
			AND gp.goods_status = 0
			<if test="zoneCode!= null and zoneCode!=''">
				AND	gp.zone_code = #{zoneCode}
			</if>
			<if test="goodsPriceId!= null and goodsPriceId!=''">
				AND s.goods_price_id = #{goodsPriceId}
			</if>	
			order by  s.update_date desc
			limit 0,#{analysisNum}
	
	<!--  
		select * from tb_goods_analysis
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				member_id = #{memberId}
				
				<if test="zoneCode!= null and zoneCode!=''">
					and zone_code = #{zoneCode}
				</if>
				
				<if test="goodsPriceId!= null and goodsPriceId!=''">
					and goods_price_id = #{goodsPriceId}
				</if>														
			</trim>
		order by update_date desc
		limit 0,8
	-->
	</select>

	<!-- 获取猜你喜欢列表 -->
	<select id="getGoodsAnalysisListAll" parameterType="hashmap" resultMap="goodspriceDaoListMap">
		select * from (
			SELECT
				<include refid="goodsPriceListColumn"></include>
			FROM
				tb_goods_price gp
			
			JOIN tb_goods_analysis s ON gp.id = s.goods_price_id
			JOIN tb_sys_units u on u.id=gp.sell_unit
			
			WHERE gp.status = 0
				AND gp.goods_status = 0
				
				AND u.zone_code=s.zone_code
				<if test="zoneCode!= null and zoneCode!=''">
					AND	s.zone_code = #{zoneCode}
				</if>
			order by s.click_count desc, s.update_date desc
		) as y GROUP BY y.id order by y.click_count desc, y.update_date desc
		limit 0,#{analysisNum}
	
	<!--  
		select * from tb_goods_analysis
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				
				<if test="zoneCode!= null and zoneCode!=''">
					zone_code = #{zoneCode}
				</if>
												
			</trim>
		order by click_count desc, update_date desc
		limit 0,8
	-->
	</select>


	<!-- 获取猜你喜欢列表 用来凑够9条数据 -->
	<select id="getGoodsAnalysisListByUser9" parameterType="hashmap" resultMap="goodspriceDaoListMap">
		select * from (
			SELECT
				<include refid="goodsPriceListColumn"></include>
			FROM
				tb_goods_price gp
			
			JOIN tb_goods_analysis s ON gp.id = s.goods_price_id
			JOIN tb_sys_units u on u.id=gp.sell_unit
			
			WHERE gp.status = 0
				AND gp.goods_status = 0
				
				AND s.member_id &lt;&gt; #{memberId}
				AND u.zone_code=s.zone_code
				<if test="zoneCode!= null and zoneCode!=''">
					AND	s.zone_code = #{zoneCode}
				</if>
				<if test="goodsPriceId!= null and goodsPriceId!=''">
					AND gp.id not in (#{goodsPriceId}) 
				</if>
			order by s.click_count desc, s.update_date desc
			) as y GROUP BY y.id order by y.click_count desc, y.update_date desc
		limit 0,#{analysisNum}
			
		<!--  
		select * from tb_goods_analysis
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				member_id &lt;&gt; #{memberId}
				<if test="zoneCode!= null and zoneCode!=''">
					and zone_code = #{zoneCode}
				</if>
												
			</trim>
		order by click_count desc, update_date desc
		limit 0,8
		-->
	</select>

	<!-- 获取当前区域信息 判断当前区域是否开通 -->
	<select id="getZoneListByCode" parameterType="hashmap" resultType="hashmap">
		SELECT
			z.*
		FROM
			tb_sys_units su
		JOIN tb_zone z ON su.zone_code = z.`code`
		WHERE
			su.unit_status = 'pass'
		AND su.unit_type = 0
		AND su.stop_date > NOW()
		and z.code= #{zoneCode}
	</select>
	
	
	<!-- 获取指定区域点击量高的头几条信息列表 -->
	<select id="getGoodsAnalysisListAll2" parameterType="hashmap" resultMap="goodspriceDaoListMap">
		SELECT
			<include refid="goodsPriceListColumn"></include>
		FROM
			tb_goods_price gp
		
		JOIN (
		SELECT
			id,
			goods_price_id,
			SUM(click_count)AS click_count,
			update_date
		FROM
			`tb_goods_analysis`
		WHERE
			zone_code = #{zoneCode}
		<if test="goodsPriceId!= null and goodsPriceId!=''">
			AND goods_price_id not in (${goodsPriceId}) 
		</if>
		GROUP BY
			goods_price_id
		) s ON gp.id = s.goods_price_id
		WHERE gp.status = 0
		AND gp.goods_status = 0
		
		AND	gp.zone_code = #{zoneCode}
		<if test="goodsPriceIds!= null and goodsPriceId!=''">
			AND gp.id not in (${goodsPriceId}) 
		</if>
		order by s.click_count desc, s.update_date desc
		limit 0,#{analysisNum}
	</select>
	
</mapper>